$date
	Tue Apr  9 20:26:04 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ArithmeticExecuteUnit_tb $end
$var wire 64 ! res [63:0] $end
$var wire 1 " done $end
$var reg 5 # ALUop [4:0] $end
$var reg 64 $ alu_vala [63:0] $end
$var reg 64 % alu_valb [63:0] $end
$var reg 6 & alu_valhw [5:0] $end
$var reg 1 ' clk $end
$var reg 1 ( rst $end
$var reg 1 ) start $end
$scope module dut $end
$var wire 5 * ALUop [4:0] $end
$var wire 64 + alu_vala [63:0] $end
$var wire 64 , alu_valb [63:0] $end
$var wire 6 - alu_valhw [5:0] $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 ) start $end
$var reg 1 " done $end
$var reg 64 . res [63:0] $end
$var reg 64 / result_reg [63:0] $end
$scope begin main_switch $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 /
b0 .
bx -
bx ,
bx +
bx *
x)
1(
0'
bx &
bx %
bx $
bx #
x"
b0 !
$end
#5
1'
#10
0'
0(
#15
1'
#20
b10 !
b10 .
b10 /
b0 &
b0 -
b1 %
b1 ,
b1 $
b1 +
b0 #
b0 *
1)
0'
#25
1'
#30
0'
0)
#35
1'
#40
0'
